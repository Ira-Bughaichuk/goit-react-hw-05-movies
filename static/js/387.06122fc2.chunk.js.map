{"version":3,"file":"static/js/387.06122fc2.chunk.js","mappings":"wRAEaA,EAASC,EAAAA,GAAAA,GAAH,oHAMNC,EAASD,EAAAA,GAAAA,GAAH,mFAKNE,EAAWF,EAAAA,GAAAA,EAAH,qFAKRG,EAAUH,EAAAA,GAAAA,IAAH,8D,SCuBpB,EApCa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEMC,EAAAA,EAAAA,IAAWP,GAFjB,OAERQ,EAFQ,OAGdJ,EAAQI,EAAMC,OAAO,EAAG,IAHV,gDAKdC,MAAM,KAAMC,SALE,yDAAH,qDAQfL,GACD,GAAE,CAACN,IAECG,GAKH,SAACR,EAAD,UACGQ,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,aAAlB,OACR,UAAClB,EAAD,YACE,SAACE,EAAD,CACEiB,IAAG,yCAAoCD,GACvCE,IAAKH,EACLI,MAAM,SAER,SAACpB,EAAD,UAAWgB,MANAD,EADL,MALL,IAiBV,C,yLCrCKM,E,QAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,KAAM,EACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPN,EAAcO,IAAI,sBADX,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAIhBC,EAAS,mCAAG,WAAMN,GAAN,yFACAH,EAAcO,IAAd,eAAkC,CAAEJ,OAAAA,IADpC,uBACfK,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAITE,EAAW,mCAAG,WAAMC,GAAN,yFACFX,EAAcO,IAAd,gBAA2BI,IADzB,uBACjBH,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAIXpB,EAAU,mCAAG,WAAMuB,GAAN,yFACDX,EAAcO,IAAd,gBAA2BI,EAA3B,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKxB,MAFY,2CAAH,sDAIV4B,EAAU,mCAAG,WAAMD,GAAN,yFACDX,EAAcO,IAAd,gBAA2BI,EAA3B,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/filmsAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastUl = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-evenly;\n  margin: 20px 0;\n`;\nexport const CastLi = styled.li`\n  list-style: none;\n  display: block;\n  margin: 0 auto;\n`;\nexport const CastName = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  padding: 10px 0;\n`;\nexport const CastImg = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCredits } from 'services/filmsAPI';\n\nimport { CastLi, CastUl, CastName, CastImg } from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const actor = await getCredits(movieId);\n        setCast(actor.splice(0, 5));\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <CastUl>\n      {cast.map(({ cast_id, name, profile_path }) => (\n        <CastLi key={cast_id}>\n          <CastImg\n            src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n            alt={name}\n            width=\"100\"\n          />\n          <CastName>{name}</CastName>\n        </CastLi>\n      ))}\n    </CastUl>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst trendingFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'b3f8ab5a3b3d716ab8a62d65695cca6b',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await trendingFilms.get('trending/movie/day');\n  return data;\n};\nexport const getSearch = async params => {\n  const { data } = await trendingFilms.get(`search/movie`, { params });\n  return data;\n};\nexport const getFilmById = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}`);\n  return data;\n};\nexport const getCredits = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = 'b3f8ab5a3b3d716ab8a62d65695cca6b';\n\n// export const getTrendingFilms = async page => {\n//   const { data } = await axios.get(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n//   );\n//   //console.log(data.results);\n//   return data;\n// };\n"],"names":["CastUl","styled","CastLi","CastName","CastImg","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCredits","actor","splice","alert","message","map","cast_id","name","profile_path","src","alt","width","trendingFilms","axios","baseURL","params","page","api_key","getTrendingFilms","get","data","getSearch","getFilmById","id","getReviews"],"sourceRoot":""}