{"version":3,"file":"static/js/50.f3d3df38.chunk.js","mappings":"kOAGaA,EAAWC,EAAAA,GAAAA,GAAH,uSAeRC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kM,8MChBVG,EAAaH,EAAAA,GAAAA,KAAH,+IAQVI,EAAkBJ,EAAAA,GAAAA,MAAH,gZAkBfK,EAAmBL,EAAAA,GAAAA,OAAH,2iB,SCwD7B,EArEmB,WAAO,IAAD,EACjBM,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAE/C,GAA0BP,EAAAA,EAAAA,UAASM,GAAnC,eAAOE,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAU,CAAEJ,MAAOF,IAFtB,OAEVO,EAFU,OAGhBX,EAAeW,EAAKC,SAHJ,gDAKhBC,MAAM,KAAMC,SALI,yDAAH,qDAQjBL,GATC,CAUF,GAAE,CAACL,IAiBJ,OACE,iCACE,UAACX,EAAD,CAAYsB,SAbK,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBX,EAAMY,QAMVf,EAA0B,KAAVG,EAAe,CAAEa,KAAMb,GAAU,CAAC,GAClDC,EAAS,KANPa,EAAAA,GAAAA,MAAY,+BAAgC,CAC1CC,SAAU,cAMf,EAGG,WACE,SAAC3B,EAAD,CACE4B,MAAOhB,EACPiB,KAAK,OACLC,SArBa,SAAAR,GACnBT,EAASS,EAAES,OAAOH,MAAMI,cACzB,EAoBOC,YAAY,2BAEd,UAAChC,EAAD,CAAkB4B,KAAK,SAAvB,WACE,SAACK,EAAA,EAAD,KACA,4CAIH7B,EAAY8B,OAAS,IACpB,wBACG9B,EAAY+B,KAAI,SAAAC,GAAI,OACnB,SAAC,IAAD,WACE,SAAC,IAAD,CAAYC,MAAO,CAAEC,KAAMrC,GAAYsC,GAAE,UAAKH,EAAKI,IAAnD,SACGJ,EAAKK,SAFKL,EAAKI,GADD,QAW9B,C,yLChFKE,E,QAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,KAAM,EACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPN,EAAchC,IAAI,sBADX,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAIhBD,EAAS,mCAAG,WAAM8B,GAAN,yFACAH,EAAchC,IAAd,eAAkC,CAAEmC,OAAAA,IADpC,uBACf7B,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAITiC,EAAW,mCAAG,WAAMT,GAAN,yFACFE,EAAchC,IAAd,gBAA2B8B,IADzB,uBACjBxB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAIXkC,EAAU,mCAAG,WAAMV,GAAN,yFACDE,EAAchC,IAAd,gBAA2B8B,EAA3B,aADC,uBAChBxB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKmC,MAFY,2CAAH,sDAIVC,EAAU,mCAAG,WAAMZ,GAAN,yFACDE,EAAchC,IAAd,gBAA2B8B,EAA3B,aADC,uBAChBxB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","pages/MoviesPage/MoviePage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/filmsAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLi = styled.li`\n  list-style: none;\n  padding: 5px 10px;\nwidth: 300px;\n margin: 0 auto;\n\n  box-shadow:\n       inset 0 -3em 3em rgba(0,0,0,0.1),\n             0 0  0 2px rgb(255,255,255),\n             0.3em 0.3em 1em rgba(0,0,0,0.3);\n    margin-top:10px;\n    cursor:pointer;\n}\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  font-size: 18px;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: rgb(115, 90, 230);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 400px;\n  overflow: hidden;\n  margin-bottom: 30px;\n`;\nexport const SearchFormInput = styled.input`\n  border: 1px solid blue;\n  border-radius: 3px;\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  padding: 0 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const SearchFormButton = styled.button`\n  width: 200px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  &:hover {\n    opacity: 1;\n  }\n  background-color: #42f2f5;\n  display: inline-flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearch } from 'services/filmsAPI';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { StyledLi } from '../../components/MovieList/MovieList.styled';\nimport { StyledLink } from '../../components/MovieList/MovieList.styled';\nimport { toast } from 'react-toastify';\n\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchFormButton,\n} from './MoviePage.styled';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [searchFilms, setSearchFilms] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameParams = searchParams.get('name') ?? '';\n  //щоб вивести по - name його значення - { value } в nameParams\n  const [query, setQuery] = useState(nameParams);\n\n  useEffect(() => {\n    if (!nameParams) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const data = await getSearch({ query: nameParams });\n        setSearchFilms(data.results);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchMovies();\n  }, [nameParams]);\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Enter the title of the movie', {\n        position: 'top-center',\n      });\n      return;\n    }\n    setSearchParams(query !== '' ? { name: query } : {}); //змінюємо запис юрл строки\n    setQuery('');\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          value={query}\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"Search for your movie\"\n        />\n        <SearchFormButton type=\"submit\">\n          <SearchIcon />\n          <span> Search</span>\n        </SearchFormButton>\n      </SearchForm>\n\n      {searchFilms.length > 0 && (\n        <ul>\n          {searchFilms.map(film => (\n            <StyledLi key={film.id}>\n              <StyledLink state={{ from: location }} to={`${film.id}`}>\n                {film.title}\n              </StyledLink>\n            </StyledLi>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst trendingFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'b3f8ab5a3b3d716ab8a62d65695cca6b',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await trendingFilms.get('trending/movie/day');\n  return data;\n};\nexport const getSearch = async params => {\n  const { data } = await trendingFilms.get(`search/movie`, { params });\n  return data;\n};\nexport const getFilmById = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}`);\n  return data;\n};\nexport const getCredits = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = 'b3f8ab5a3b3d716ab8a62d65695cca6b';\n\n// export const getTrendingFilms = async page => {\n//   const { data } = await axios.get(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n//   );\n//   //console.log(data.results);\n//   return data;\n// };\n"],"names":["StyledLi","styled","StyledLink","Link","SearchForm","SearchFormInput","SearchFormButton","location","useLocation","useState","searchFilms","setSearchFilms","useSearchParams","searchParams","setSearchParams","nameParams","get","query","setQuery","useEffect","fetchMovies","getSearch","data","results","alert","message","onSubmit","e","preventDefault","trim","name","toast","position","value","type","onChange","target","toLowerCase","placeholder","Search","length","map","film","state","from","to","id","title","trendingFilms","axios","baseURL","params","page","api_key","getTrendingFilms","getFilmById","getCredits","cast","getReviews"],"sourceRoot":""}