{"version":3,"file":"static/js/493.81962fab.chunk.js","mappings":"iTAEaA,EAAOC,EAAAA,GAAAA,IAAH,6EAKJC,EAAUD,EAAAA,GAAAA,IAAH,iFAKPE,EAAcF,EAAAA,GAAAA,IAAH,2CAGXG,EAAsBH,EAAAA,GAAAA,EAAH,sHAOnBI,EAAWJ,EAAAA,GAAAA,KAAH,6CAGRK,EAAeL,EAAAA,GAAAA,GAAH,oGAMZM,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mmB,SC2CvB,EAzDyB,WAAO,IAAD,IACrBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEKC,EAAAA,EAAAA,IAAYT,GAFjB,OAEZU,EAFY,OAGlBN,EAASM,GAHS,gDAKlBC,MAAM,KAAMC,SALM,yDAAH,qDAQfZ,GACFQ,GAEH,GAAE,CAACR,IACJ,IAAMa,GAAeC,EAAAA,EAAAA,QAAM,oBAACT,EAASU,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpD,IAAKb,EAAO,OAAO,KACnB,IAAQc,EAAyCd,EAAzCc,MAAOC,EAAkCf,EAAlCe,OAAQC,EAA0BhB,EAA1BgB,SAAUC,EAAgBjB,EAAhBiB,YAEjC,OACE,iCACE,SAACtB,EAAD,CAAYuB,GAAIR,EAAaS,QAA7B,uBACA,UAAC/B,EAAD,YACE,SAACE,EAAD,CACE8B,IAAG,yCAAoCH,GACvCI,IAAKP,KAEP,UAACvB,EAAD,YACE,wBAAKuB,KACL,UAACtB,EAAD,YACE,SAACC,EAAD,wBADF,IACkCuB,MAElC,0BACE,SAACvB,EAAD,qBACCsB,EAAOO,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,eAI1C,4BACE,SAAC/B,EAAD,WACE,SAACC,EAAD,CAAYuB,GAAG,OAAf,qBAEF,SAACxB,EAAD,WACE,SAACC,EAAD,CAAYuB,GAAG,SAAf,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,yLCtEKC,E,QAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,KAAM,EACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPN,EAAcO,IAAI,sBADX,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAIhBC,EAAS,mCAAG,WAAMN,GAAN,yFACAH,EAAcO,IAAd,eAAkC,CAAEJ,OAAAA,IADpC,uBACfK,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAIT/B,EAAW,mCAAG,WAAMiC,GAAN,yFACFV,EAAcO,IAAd,gBAA2BG,IADzB,uBACjBF,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAIXG,EAAU,mCAAG,WAAMD,GAAN,yFACDV,EAAcO,IAAd,gBAA2BG,EAA3B,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,EAAKI,MAFY,2CAAH,sDAIVC,EAAU,mCAAG,WAAMH,GAAN,yFACDV,EAAcO,IAAd,gBAA2BG,EAA3B,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["pages/MovieDetailsPage/MovieDetailPages.styled.js","pages/MovieDetailsPage/MovieDetailPages.jsx","services/filmsAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Cart = styled.div`\n  padding: 30px 0;\n  display: flex;\n  gap: 100px;\n`;\nexport const CartImg = styled.img`\n  display: block;\n  max-width: 500px;\n  height: auto;\n`;\nexport const CartContent = styled.div`\n  display: block;\n`;\nexport const CartContentOverview = styled.p`\n  max-width: 800px;\n  width: 100%;\n  color: black;\n  font-size: 18px;\n  padding: 10px 0;\n`;\nexport const CartSpan = styled.span`\n  font-weight: 700;\n`;\nexport const StyledliBtns = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const LinkButton = styled(Link)`\n  text-decoration: none;\n  background-color: #42f2f5;\n  padding: 5px 10px;\n  border-radius: 5px;\n  color: black;\n  font-weight: 600;\n  font-size: 18px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  display: block;\n\n  max-width: 120px;\n  width: 100%;\n\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  :focus {\n    scale: 1.1;\n    color: #5533f2;\n  }\n`;\n","import React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { getFilmById } from 'services/filmsAPI';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Cart,\n  CartImg,\n  CartContent,\n  CartContentOverview,\n  CartSpan,\n  LinkButton,\n  StyledliBtns,\n} from './MovieDetailPages.styled';\n\nconst MovieDetailPages = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchFilmById = async () => {\n      try {\n        const filmById = await getFilmById(movieId);\n        setMovie(filmById);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    if (movieId) {\n      fetchFilmById();\n    }\n  }, [movieId]);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  if (!movie) return null;\n  const { title, genres, overview, poster_path } = movie;\n\n  return (\n    <>\n      <LinkButton to={backLinkHref.current}> Go Back</LinkButton>\n      <Cart>\n        <CartImg\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n        <CartContent>\n          <h2>{title}</h2>\n          <CartContentOverview>\n            <CartSpan>Overview:</CartSpan> {overview}\n          </CartContentOverview>\n          <p>\n            <CartSpan>Genre:</CartSpan>\n            {genres.map(item => item.name).join(' ')}\n          </p>\n        </CartContent>\n      </Cart>\n      <div>\n        <StyledliBtns>\n          <LinkButton to=\"cast\">Cast</LinkButton>\n        </StyledliBtns>\n        <StyledliBtns>\n          <LinkButton to=\"review\">Reviews</LinkButton>\n        </StyledliBtns>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailPages;\n","import axios from 'axios';\n\nconst trendingFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'b3f8ab5a3b3d716ab8a62d65695cca6b',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await trendingFilms.get('trending/movie/day');\n  return data;\n};\nexport const getSearch = async params => {\n  const { data } = await trendingFilms.get(`search/movie`, { params });\n  return data;\n};\nexport const getFilmById = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}`);\n  return data;\n};\nexport const getCredits = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await trendingFilms.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = 'b3f8ab5a3b3d716ab8a62d65695cca6b';\n\n// export const getTrendingFilms = async page => {\n//   const { data } = await axios.get(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n//   );\n//   //console.log(data.results);\n//   return data;\n// };\n"],"names":["Cart","styled","CartImg","CartContent","CartContentOverview","CartSpan","StyledliBtns","LinkButton","Link","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchFilmById","getFilmById","filmById","alert","message","backLinkHref","useRef","state","from","title","genres","overview","poster_path","to","current","src","alt","map","item","name","join","Suspense","fallback","Loader","trendingFilms","axios","baseURL","params","page","api_key","getTrendingFilms","get","data","getSearch","id","getCredits","cast","getReviews"],"sourceRoot":""}